version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: Resource/Dockerfile.dev
    networks:
      - my-network
    working_dir: /code
    depends_on:
      - postgres
    restart: on-failure
    environment:
      - DB_HOST=postgres
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_NAME=crud_db
      - DB_PORT=5432
    ports:
      - "8000:8000"
  postgres:
    image: postgres:14-alpine
    networks:
      - my-network
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=1234
      - POSTGRES_USER=root
      - POSTGRES_DB=crud_db
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/usr/resource_sharing_app/prometheus.yml
      - ./myrules.yml:/usr/resource_sharing_app/myrules.yml
    # Command to start Prometheus with the specified configuration file
    command:
      - '--config.file=/usr/resource_sharing_app/prometheus.yml'
  alertmanager:
    image: prom/alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - "./alertmanager:/usr/Downloads/alertmanager"
      - "./alertmanager-data:/usr/Downloads/alertmanager/data"
      - "./alertmanager.yml:/usr/resource_sharing_app/alertmanager.yml"
    command: '--config.file=/usr/resource_sharing_app/alertmanager.yml --log.level=debug' 

networks:
  my-network:
    driver: bridge




  